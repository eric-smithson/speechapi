<project name="speechapi" basedir="." default="compile">

  <property environment="env" />
  <property file="${basedir}/${user.name}.properties" />
  <property file="${user.home}/build.properties" />
  <property file="${basedir}/build.properties" />

  <!--property name="catalina.home" value="${env.CATALINA_HOME}" /-->	
  <property name="lib.dir" value="${basedir}/lib" />

  <property name="jetm.jar" value="${jetm.dir}/lib/jetm-1.2.3.jar" />
  <property name="red5.jar" value="${red5.dir}/red5.jar" />
  <property name="gson.jar" value="${red5.dir}/gson-1.4.jar" />


  <path id="red5asr.classpath">  
    <pathelement	location="${red5.jar}" />
    <pathelement	location="${jetm.jar}" />
    <pathelement	location="${gson.jar}" />
    <fileset dir="${red5.dir}/lib" includes="*.jar"/>
    <fileset dir="${xuggler.dir}" includes="*.jar"/>
    <fileset dir="${lib.dir}" includes="*.jar"/>
  </path>

  <property name="src.dir" value="WEB-INF/src"/>
  <property name="build.dir" value="WEB-INF"/>
  <property name="classes.dir" value="${build.dir}/classes"/>


   <property name="build.home" value="${basedir}/target/build" />
   <property name="build.classes.home" value="${build.home}/classes" />
   <property name="build.war.home" value="${build.home}/war" />
   <property name="build.flash.home" value="${build.home}/flash" />
   <property name="name" value="${ant.project.name}" />
   <property name="war.filename" value="${name}.war" />
	
   <property name="lib.dir" value="${basedir}/lib" />

   <property name="FLEX_HOME" value="${flex.home}"/> 
   <property name="as3_core" value="${as3.core.lib}"/> 
   <property name="js.dir" value="${basedir}/src/javascript"/> 

   <property name="ADL" value="${FLEX_HOME}/bin/adl.exe"/>
	
   <property name="APP_DESCRIPTOR" value="${basedir}/src/flash/airtest-app.xml"/>
   
    <path id="maven-ant-tasks.classpath" path="${lib.dir}/maven-ant-tasks-2.1.0.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />	
  
     <target name="setup">
	<mkdir dir="${build.home}" />
	<mkdir dir="${build.classes.home}" />
	<mkdir dir="${build.war.home}/WEB-INF" />
	<!--mkdir dir="${build.web.home}" /-->
	<mkdir dir="${build.flash.home}" />
     </target>
	
	<target name="clean">
		<delete dir="${build.home}" includeEmptyDirs="true" />
	</target>


	<target name="war" depends="compile">
		
		<filter token="application.context" value="/WEB-INF/dev-applicationContext.xml" />
		<filter token="applicationContext.recognizerService.baseGrammarDir" value="c:/temp" />
		<filter token="applicationContext.recognizerService.sphinxConfigFile" value="file:///${catalina.home}/webapps/${ant.project.name}/WEB-INF/sphinx-config-2pools.xml" />
		<filter token="applicationContext.synthesizerService.prefix" value="http://${catalina.host}:${catalina.port}/${ant.project.name}/prompts/" />
		<filter token="applicationContext.synthesizerService.promptDir" value="${catalina.home}/webapps/${ant.project.name}/prompts" />
		<copy todir="${build.war.home}/WEB-INF" overwrite="true" filtering="true">
			<fileset dir="${basedir}/etc" includes="*.xml,*.properties" />
		</copy>
		<copy todir="${build.war.home}/WEB-INF/lib" overwrite="true" filtering="false">
			<fileset dir="${basedir}/lib" includes="*.jar" />
		</copy>
		<copy todir="${build.war.home}/WEB-INF/classes" overwrite="true" filtering="false">
			<fileset dir="${build.classes.home}" includes="**/*.class" />
		</copy>
	        <mkdir dir="${build.war.home}/streams" />
		
		<!--copy todir="${build.war.home}/WEB-INF/lib">
                    <fileset refid="rest.dependency.fileset" />
                    <mapper classpathref="maven-ant-tasks.classpath"
                            classname="org.apache.maven.artifact.ant.VersionMapper"
                            from="${dependency.versions}" to="flatten" />
                </copy-->

		<war warfile="${build.war.home}/${war.filename}" webxml="${build.war.home}/WEB-INF/web.xml">
			<webinf dir="${build.war.home}/WEB-INF" includes="*.*" />
			<zipfileset dir="${basedir}/etc" prefix="WEB-INF/classes" includes="log4j.xml" />
			<zipfileset dir="${basedir}/etc"  includes="crossdomain.xml" />
			<classes dir="${build.classes.home}" />
			<lib dir="${basedir}/lib" />
			<zipfileset dir="${build.war.home}/streams" prefix="streams" />	
		</war>
	</target>


      <target name="compile" depends="setup">
      	    <echo message="compile" />

      	    <javac srcdir="${basedir}/src/java"
        	destdir="${build.classes.home}"
        	debug="on"
        	failonerror="true">
        	<classpath>
        		<path refid="red5asr.classpath" />
			<pathelement location="${build.classes.home}" />
		</classpath>
	    </javac>
    </target>

    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" /> 
    <target name="flash">
	    <mxmlc file="${basedir}/src/flash/speechapi.mxml" output="${build.flash.home}/lib/speechapi.swf"  keep-generated-actionscript="true">
             <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
            <source-path path-element="${FLEX_HOME}/frameworks"/>
	    <source-path path-element="${as3_core}"/>

            <!-- List of SWC files or directories that contain SWC files. -->
            <compiler.library-path dir="${basedir}/flexlib" append="true">
                <include name="*.swc" />
            </compiler.library-path>
	    
        </mxmlc>
    </target>

    <target name="flex-lib">
        <compc 
		output="${build.flash.home}/lib/speechapi.swc"
            include-classes="com.spokentech.Speech com.spokentech.HttpSpeech com.adobe.audio.format.WAVWriter ru.inspirit.net.MultipartURLLoader ru.inspirit.net.events.MultipartURLLoaderEvent">
	    <source-path path-element="${as3_core}"/>
	    <source-path path-element="${basedir}/src/flash"/>
            <!-- List of SWC files or directories that contain SWC files. -->
            <compiler.library-path dir="${basedir}/flexlib" append="true">
                <include name="*.swc" />
	    </compiler.library-path>
        </compc>
    </target>


   <target name="concat-js">
	   <concat destfile="${js.dir}/gen/speechapi-all.js"
             force="no">
         <filelist dir="${js.dir}"
		 files="thirdparty/swfobject.js, speechapi.js"/>
     </concat>
   </target>


    <target name="air">
	    <mxmlc file="${basedir}/src/flash/speechair.mxml" keep-generated-actionscript="true">
            <load-config filename="${FLEX_HOME}/frameworks/air-config.xml"/>
            <source-path path-element="${FLEX_HOME}/frameworks"/>
	    <source-path path-element="${as3_core}"/>

            <!-- List of SWC files or directories that contain SWC files. -->
            <compiler.library-path dir="${basedir}/flexlib" append="true">
                <include name="*.swc" />
	    </compiler.library-path>

        </mxmlc>
    </target>

   <target name="airtest" depends="air">
       <exec executable="${ADL}">
           <arg value="${APP_DESCRIPTOR}"/>
       </exec> 
   </target>


    <target name="deploy">
	         <copy todir="${webserver.htdocs}/speechapi" overwrite="true" filtering="true">
			<fileset dir="${basedir}/src/test" includes="*.html" />
		</copy>
	    <copy todir="${webserver.htdocs}/speechapi/lib" overwrite="true" filtering="true">
		    <fileset dir="${build.flash.home}/lib" includes="*.swf" />
		    <fileset dir="${basedir}/src/javascript" includes="*.js" />
		    <fileset dir="${basedir}/src/javascript/thirdparty" includes="*.js" />
		</copy>
    </target>
   

  <target name="clean-build" depends="clean,war"/>
</project>
