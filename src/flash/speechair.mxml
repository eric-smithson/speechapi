<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
						creationComplete="init()">
	<mx:Script>
		<![CDATA[


	import com.spokentech.Speech;
	import org.osflash.thunderbolt.Logger;
	import mx.controls.Alert;

	/*
 	* speechapi - AIR example for use in on-line speech-to-text and text-to-speech.
 	*
 	* Copyright (C) 20010 Spencer Lord
 	*
 	* This program is free software; you can redistribute it and/or modify
 	* it under the terms of the GNU General Public License as published by
 	* the Free Software Foundation; either version 3 of the License, or
 	* (at your option) any later version.
 	*
 	* This program is distributed in the hope that it will be useful,
 	* but WITHOUT ANY WARRANTY; without even the implied warranty of
 	* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 	* GNU General Public License for more details.
 	*
 	* You should have received a copy of the GNU General Public License
 	* along with this program; if not, write to the Free Software
 	* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 	*
 	*
	*/
		
	private var speechapi:Speech;
	private var mic:Microphone = Microphone.getMicrophone();

	protected function init():void {

	    trace("trace init");
	    Logger.info("logger init");

	   //hard code the username password server url
	   var userid:String = "sal";
	   var password :String = "password";
	   //var speechServer:String ="rtmp://www.speechapi.com:1935/firstapp";
	   var speechServer:String ="http://www.speechapi.com:8000/speechcloud";


	   //create the speechapi object
	   speechapi = new Speech();
	   
	   //Init 
	   speechapi.initAir(userid,password,recCallback,ttsCallback,speechServer, micActivityEventHandler,micActivityEventHandlerHttp);

	}


	private  function speak(text:String, speaker:String):void {
	    speechapi.speak(text,speaker);
	}


	public function startRecognition():void {

	   var auto:Boolean = false;
		var grammar:String="one,two,three,four,five,six,seven,eight,nine,ten" ;
		var gMode:String = "simple";
		var language:String = "en";
		var oog:Boolean = false;
	 	speechapi.setupRecognition(gMode, grammar, auto, language, oog);
	    trace("start");
	    Logger.info("start!");
	    speechapi.startRecognition();
        }

	public function stopRecognition():void {
	    trace("stop");
	    speechapi.stopRecognition();
	}


	public function recCallback(results:Object):void {
	   //Alert.show(results.text);
	   speak("you said, "+results.text, "male");
        }

	public function ttsCallback():void {
	}


	private function micActivityEventHandlerHttp(event:ActivityEvent,mic:Microphone):void {
		//log.text=mic.activityLevel.toString();
		//Alert.show(mic.activityLevel.toString());
		var automatic:Boolean = false;
		if(automatic) {
			if(event.activating) {
				speechapi.startRecognition();
			} else {
				speechapi.stopRecognition();
			}
		}
	}

	private function micActivityEventHandler(event:ActivityEvent):void {
		//Alert.show(mic.activityLevel.toString());
		//log.text=mic.activityLevel.toString();
		//addEventListener(Event.ENTER_FRAME, updateVolLevel);
		var automatic:Boolean = false;
		if(automatic) {
			if(event.activating) {
				speechapi.startRecognition();
			} else {
				speechapi.stopRecognition();
			}
		}
	}




	public function stopspeaksal():void {
	   speechapi.cancelSpeak();
	}

	public function speaksal():void {
	   speechapi.speak("Hello hello hello.  who is out there?", "female");
        }


		]]>
	</mx:Script>
	


	<!--mx:ComboBox id="comboMicList" x="100" y="10" dataProvider="{microphoneList}"/-->
	<mx:Button x="10" y="40" label="Start Rec" click="startRecognition()"/>
	<mx:Button x="97" y="40" label="Stop Rec" click="stopRecognition()"/>
	<mx:Button x="10" y="70" label="speak" click="speaksal()"/>
	<mx:Button x="97" y="70" label="stop speak" click="stopspeaksal()"/>
	<!--mx:Button x="10" y="10" label="Select Mic" click="init()"/-->
	<!--mx:Button x="97" y="90" label="Test" click="speak('here here','a')"/-->
	<!--mx:Canvas width="100%" height="100%" id="myCanvas"></mx:Canvas--> 
	<!--mx:Canvas id="myCanvas" x="120" y="120" width="300" height="150" backgroundColor="#EEEEEE"/-->
	
	
</mx:WindowedApplication>
